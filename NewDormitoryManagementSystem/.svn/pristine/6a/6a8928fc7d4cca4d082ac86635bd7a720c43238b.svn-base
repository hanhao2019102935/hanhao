package com.sxau.dormitory.controller;

import java.io.FileNotFoundException;
import java.util.List;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import com.sxau.dormitory.biz.AdminBiz;
import com.sxau.dormitory.biz.BuildingBiz;
import com.sxau.dormitory.biz.DormitoryBiz;
import com.sxau.dormitory.entity.Admin;
import com.sxau.dormitory.entity.Building;
import com.sxau.dormitory.entity.Dormitory;

@Controller
@RequestMapping(value = "building")
public class BuildingController {
	@Autowired
	private BuildingBiz buildingBiz;
	@Autowired
	private AdminBiz adminBiz;
	@Autowired
	private DormitoryBiz dormitoryBiz;
	
	public DormitoryBiz getDormitoryBiz() {
		return dormitoryBiz;
	}

	public void setDormitoryBiz(DormitoryBiz dormitoryBiz) {
		this.dormitoryBiz = dormitoryBiz;
	}

	public BuildingBiz getBuildingBiz() {
		return buildingBiz;
	}

	public void setBuildingBiz(BuildingBiz buildingBiz) {
		this.buildingBiz = buildingBiz;
	}

	public AdminBiz getAdminBiz() {
		return adminBiz;
	}

	public void setAdminBiz(AdminBiz adminBiz) {
		this.adminBiz = adminBiz;
	}

	// 查询所有楼宇的信息
	@RequestMapping(value = "selectAllBuilding")
	@ResponseBody
	public List<Building> addBadmin(Building building, HttpSession session) throws FileNotFoundException {
		List<Building> buildingList = buildingBiz.selectAllBuilding();

		// session.setAttribute("buildingList", buildingList);
		/*
		 * Gson gson = new Gson(); String buildingStr =
		 * gson.toJson(buildingList); session.setAttribute("buildingStr",
		 * buildingStr); System.out.println(buildingStr);
		 */
		return buildingList;
	}

	// 楼宇展示的方法
	@RequestMapping(value = "showAllBuilding")
	public String showAllBuilding(HttpSession session) throws FileNotFoundException {
		List<Building> buildingList = buildingBiz.selectAllBuilding();
		session.setAttribute("buildingList", buildingList);
		List<Admin> allAdmin = adminBiz.selectAllAdmin();
		session.setAttribute("allAdmin", allAdmin);
		return "buildingInfo";
	}

	// 添加楼宇和插入宿舍的方法
	@RequestMapping(value = "addBuilding")
	public String addBuilding(Building building,Dormitory dormitory) throws FileNotFoundException {
		//插入楼宇
		int i = buildingBiz.insertBuilding(building);
		//根据插入楼宇的楼宇名获得插入楼宇的ID
		int buildingid = buildingBiz.selectByBuildingName(building.getBuildingname()).getBuildingid();
		//如果插入成功
		if(i==1){
			//设置楼宇的ID
			building.setBuildingid(buildingid);
			//插入宿舍
			dormitoryBiz.insertDormitory(dormitory, building);			
			return "redirect:/building/showAllBuilding.do";
		}else{
			return "message";
		}
	}

	// 删除楼宇的方法
	@RequestMapping(value = "deleteBuilding")
	public String deleteBuilding(Integer buildingid) throws FileNotFoundException {
		buildingBiz.deleteByBuildingId(buildingid);
		return "redirect:/building/showAllBuilding.do";
	}
	
	// 修改楼宇的显示页面
		@RequestMapping(value = "showUpdateBuilding")
		public String showUpdateBuilding(Integer buildingid,HttpSession session) throws FileNotFoundException {
			Building updateBuilding = buildingBiz.selectByBuildingId(buildingid);
			session.setAttribute("updateBuilding", updateBuilding);
			return "updateBuilding";
		}
	
	// 修改楼宇的方法
	@RequestMapping(value = "updateBuilding")
	public String updateBuilding(Building building) throws FileNotFoundException {
		buildingBiz.updateBuilding(building);
		return "redirect:/building/showAllBuilding.do";
	}
	//查询楼层数
	@RequestMapping(value = "findFloorCount")
	@ResponseBody
	public Building findFloorCount(int buildingid) {
		Building building = buildingBiz.selectByBuildingId(buildingid);
		return building;
	}
	
}
